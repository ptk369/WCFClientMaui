//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//
//     Änderungen an dieser Datei können fehlerhaftes Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dw.WcfService;


//using System.Runtime.Serialization;
    
    
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.Runtime.Serialization.DataContractAttribute(Name="DwWcfExceptionDetails", Namespace="http://Dw.WcfService")]
public partial class DwWcfExceptionDetails : object
{
        
    private string MessageField;
        
    private bool SessionInvalidField;
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public string Message
    {
        get
        {
            return this.MessageField;
        }
        set
        {
            this.MessageField = value;
        }
    }
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public bool SessionInvalid
    {
        get
        {
            return this.SessionInvalidField;
        }
        set
        {
            this.SessionInvalidField = value;
        }
    }
}
    
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.Runtime.Serialization.DataContractAttribute(Name="DwInfo", Namespace="http://Dw.WcfService")]
public partial class DwInfo : object
{
        
    private string dwVersionField;
        
    private string machineNameField;
        
    private string programNameField;
        
    private string userNameField;
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public string dwVersion
    {
        get
        {
            return this.dwVersionField;
        }
        set
        {
            this.dwVersionField = value;
        }
    }
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public string machineName
    {
        get
        {
            return this.machineNameField;
        }
        set
        {
            this.machineNameField = value;
        }
    }
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public string programName
    {
        get
        {
            return this.programNameField;
        }
        set
        {
            this.programNameField = value;
        }
    }
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public string userName
    {
        get
        {
            return this.userNameField;
        }
        set
        {
            this.userNameField = value;
        }
    }
}
    
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.Runtime.Serialization.DataContractAttribute(Name="AppData", Namespace="http://Dw.WcfService")]
public partial class AppData : object
{
        
    private int commandField;
        
    private string jsonField;
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public int command
    {
        get
        {
            return this.commandField;
        }
        set
        {
            this.commandField = value;
        }
    }
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public string json
    {
        get
        {
            return this.jsonField;
        }
        set
        {
            this.jsonField = value;
        }
    }
}
    
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.Runtime.Serialization.DataContractAttribute(Name="AttrListItem", Namespace="http://Dw.WcfService")]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.cLinkSyncRequest))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.xmlListT))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.searchT))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.attrVarTypeT))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.dataTypeT))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.DwInfo))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.AppData))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.AttrListItem[]))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.VariableListItem[]))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.VariableListItem))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.FormulaListItem[]))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.FormulaListItem))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.OverrideCondition[]))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.OverrideCondition))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.ListCondition[]))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.ListCondition))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(int[]))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
public partial class AttrListItem : object
{
        
    private Dw.WcfService.dataTypeT dataTypeField;
        
    private bool foundField;
        
    private string nameField;
        
    private object valueField;
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public Dw.WcfService.dataTypeT dataType
    {
        get
        {
            return this.dataTypeField;
        }
        set
        {
            this.dataTypeField = value;
        }
    }
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public bool found
    {
        get
        {
            return this.foundField;
        }
        set
        {
            this.foundField = value;
        }
    }
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public string name
    {
        get
        {
            return this.nameField;
        }
        set
        {
            this.nameField = value;
        }
    }
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public object value
    {
        get
        {
            return this.valueField;
        }
        set
        {
            this.valueField = value;
        }
    }
}
    
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.Runtime.Serialization.DataContractAttribute(Name="cLinkSyncRequest", Namespace="http://schemas.datacontract.org/2004/07/Dw.Utility.Basics.LinkSync")]
public partial class cLinkSyncRequest : object
{
        
    private int iOtParentField;
        
    private string keywordFilterField;
        
    private string[] parentCodesField;
        
    private bool storeField;
        
    private bool useRegexField;
        
    private bool webField;
        
    [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
    public int iOtParent
    {
        get
        {
            return this.iOtParentField;
        }
        set
        {
            this.iOtParentField = value;
        }
    }
        
    [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
    public string keywordFilter
    {
        get
        {
            return this.keywordFilterField;
        }
        set
        {
            this.keywordFilterField = value;
        }
    }
        
    [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
    public string[] parentCodes
    {
        get
        {
            return this.parentCodesField;
        }
        set
        {
            this.parentCodesField = value;
        }
    }
        
    [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
    public bool store
    {
        get
        {
            return this.storeField;
        }
        set
        {
            this.storeField = value;
        }
    }
        
    [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
    public bool useRegex
    {
        get
        {
            return this.useRegexField;
        }
        set
        {
            this.useRegexField = value;
        }
    }
        
    [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
    public bool web
    {
        get
        {
            return this.webField;
        }
        set
        {
            this.webField = value;
        }
    }
}
    
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.Runtime.Serialization.DataContractAttribute(Name="xmlListT", Namespace="http://schemas.datacontract.org/2004/07/Dw.Utility.Basics")]
public enum xmlListT : int
{
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Product = 12,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Cart = 15,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Project = 18,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Event = 22,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Person = 17,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Address = 21,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Service = 84,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    ProcessManual = 90,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    User = 135,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Building = 143,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Contract = 152,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Order = 300,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    MpPerson = 173,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    SQLdirect = 15001,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Lease = 15002,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    FotoExperience = -15103,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    LicenseUpdate = -15104,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    ResourceDownload = -15105,
}
    
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.Runtime.Serialization.DataContractAttribute(Name="searchT", Namespace="http://schemas.datacontract.org/2004/07/Dw.Utility.Basics")]
public enum searchT : int
{
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Project = 1,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Product = 2,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Event = 3,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Address = 4,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Building = 5,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Contract = 9,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Service = 10,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    PM = 12,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    SQLdirect = 15001,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    FotoExperienceUser = 15100,
}
    
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.Runtime.Serialization.DataContractAttribute(Name="attrVarTypeT", Namespace="http://schemas.datacontract.org/2004/07/Dw.Utility.Communication")]
public enum attrVarTypeT : int
{
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    All = -1,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    None = 0,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Project = 1,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Person = 2,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Company = 3,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Event = 4,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Product = 5,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    ActivityGroup = 6,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Activity = 7,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    ActivityMilestone = 8,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    ProductCode = 9,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    CompanyCustCode = 10,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    CompanySupplCode = 11,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    PersonCode = 12,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    ProjectCode = 13,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    LbDin = 14,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    LbVe = 15,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    eClass = 16,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    rscEmployee = 17,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    rscExternalEmployees = 18,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    rscOtherRessource = 19,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    AddrGroup = 20,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Index = 21,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Building = 22,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    CompanyGuid = 23,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    PersonGuid = 24,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Contract = 25,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    OrderProcess = 26,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    OrderProcessMaster = 27,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    OrderCart = 28,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    OrderPosition = 29,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    ActivityGroupEvent = 30,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    ActivityEvent = 31,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Service = 33,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    User = 34,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    PM = 35,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    PMAttribute = 36,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Cart = 37,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    CartProduct = 38,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    mailOrderProcess = 39,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    mailOrderMaster = 40,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    LbDinById = 41,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    LbVeById = 42,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    eClassById = 43,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    mailPurchaseInvoice = 44,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Organization = 45,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Transport = 46,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    OrderProcessCode = 47,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    OrderMasterCode = 48,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    EventCode = 49,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    BuildingCode = 50,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    ContractCode = 51,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    ServiceCode = 52,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    PMCode = 53,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    MailConfig = 54,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Cost = 55,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    AssetSN = 56,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    ProjectPath = 57,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    MpPerson = 58,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    MpHotel = 59,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    Mail = 60,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    LoadSpace = 61,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    PurchaseInvoice = 62,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    TypeTableId = 63,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    TypeTableCode = 64,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    FacProduct = 65,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    FacProductSN = 66,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    NestedAttribute = 2147483647,
}
    
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.Runtime.Serialization.DataContractAttribute(Name="dataTypeT", Namespace="http://schemas.datacontract.org/2004/07/Dw.Utility")]
public enum dataTypeT : int
{
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    None = -1,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    tString = 0,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    tInt = 1,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    tReal = 2,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    tDateTime = 3,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    tBool = 4,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    tList = 5,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    tTable = 6,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    tObject = 7,
        
    [System.Runtime.Serialization.EnumMemberAttribute()]
    valid = 7,
}
    
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.Runtime.Serialization.DataContractAttribute(Name="VariableListItem", Namespace="http://Dw.WcfService")]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.cLinkSyncRequest))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.xmlListT))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.searchT))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.attrVarTypeT))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.dataTypeT))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.DwInfo))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.AppData))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.AttrListItem[]))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.AttrListItem))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.VariableListItem[]))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.FormulaListItem[]))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.FormulaListItem))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.OverrideCondition[]))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.OverrideCondition))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.ListCondition[]))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.ListCondition))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(int[]))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
public partial class VariableListItem : object
{
        
    private string nameField;
        
    private object valueField;
        
    private Dw.WcfService.attrVarTypeT varTypeField;
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public string name
    {
        get
        {
            return this.nameField;
        }
        set
        {
            this.nameField = value;
        }
    }
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public object value
    {
        get
        {
            return this.valueField;
        }
        set
        {
            this.valueField = value;
        }
    }
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public Dw.WcfService.attrVarTypeT varType
    {
        get
        {
            return this.varTypeField;
        }
        set
        {
            this.varTypeField = value;
        }
    }
}
    
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.Runtime.Serialization.DataContractAttribute(Name="FormulaListItem", Namespace="http://Dw.WcfService")]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.cLinkSyncRequest))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.xmlListT))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.searchT))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.attrVarTypeT))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.dataTypeT))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.DwInfo))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.AppData))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.AttrListItem[]))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.AttrListItem))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.VariableListItem[]))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.VariableListItem))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.FormulaListItem[]))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.OverrideCondition[]))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.OverrideCondition))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.ListCondition[]))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(Dw.WcfService.ListCondition))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(int[]))]
[System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
public partial class FormulaListItem : object
{
        
    private Dw.WcfService.dataTypeT dataTypeField;
        
    private string formulaField;
        
    private bool foundField;
        
    private object valueField;
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public Dw.WcfService.dataTypeT dataType
    {
        get
        {
            return this.dataTypeField;
        }
        set
        {
            this.dataTypeField = value;
        }
    }
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public string formula
    {
        get
        {
            return this.formulaField;
        }
        set
        {
            this.formulaField = value;
        }
    }
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public bool found
    {
        get
        {
            return this.foundField;
        }
        set
        {
            this.foundField = value;
        }
    }
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public object value
    {
        get
        {
            return this.valueField;
        }
        set
        {
            this.valueField = value;
        }
    }
}
    
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.Runtime.Serialization.DataContractAttribute(Name="OverrideCondition", Namespace="http://Dw.WcfService")]
public partial class OverrideCondition : object
{
        
    private string codeField;
        
    private string conditionField;
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public string code
    {
        get
        {
            return this.codeField;
        }
        set
        {
            this.codeField = value;
        }
    }
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public string condition
    {
        get
        {
            return this.conditionField;
        }
        set
        {
            this.conditionField = value;
        }
    }
}
    
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.Runtime.Serialization.DataContractAttribute(Name="ListCondition", Namespace="http://Dw.WcfService")]
public partial class ListCondition : object
{
        
    private string codeField;
        
    private string valueField;
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public string code
    {
        get
        {
            return this.codeField;
        }
        set
        {
            this.codeField = value;
        }
    }
        
    [System.Runtime.Serialization.DataMemberAttribute()]
    public string value
    {
        get
        {
            return this.valueField;
        }
        set
        {
            this.valueField = value;
        }
    }
}
    
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://Dw.WcfService", ConfigurationName="Dw.WcfService.IDwConnect")]
public interface IDwConnect
{
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/Logon", ReplyAction="http://Dw.WcfService/IDwConnect/LogonResponse")]
    Dw.WcfService.LogonResponse Logon(Dw.WcfService.LogonRequest request);
        
    // CODEGEN: Ein Nachrichtenvertrag wird generiert, da der Vorgang mehrere Rückgabewerte aufweist.
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/Logon", ReplyAction="http://Dw.WcfService/IDwConnect/LogonResponse")]
    System.Threading.Tasks.Task<Dw.WcfService.LogonResponse> LogonAsync(Dw.WcfService.LogonRequest request);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/ConnectDwProject", ReplyAction="http://Dw.WcfService/IDwConnect/ConnectDwProjectResponse")]
    Dw.WcfService.ConnectDwProjectResponse ConnectDwProject(Dw.WcfService.ConnectDwProjectRequest request);
        
    // CODEGEN: Ein Nachrichtenvertrag wird generiert, da der Vorgang mehrere Rückgabewerte aufweist.
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/ConnectDwProject", ReplyAction="http://Dw.WcfService/IDwConnect/ConnectDwProjectResponse")]
    System.Threading.Tasks.Task<Dw.WcfService.ConnectDwProjectResponse> ConnectDwProjectAsync(Dw.WcfService.ConnectDwProjectRequest request);
        
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Dw.WcfService/IDwConnect/Logoff")]
    void Logoff(string sessionToken);
        
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Dw.WcfService/IDwConnect/Logoff")]
    System.Threading.Tasks.Task LogoffAsync(string sessionToken);
        
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Dw.WcfService/IDwConnect/SetDataLanguage")]
    void SetDataLanguage(string sessionToken, string code);
        
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Dw.WcfService/IDwConnect/SetDataLanguage")]
    System.Threading.Tasks.Task SetDataLanguageAsync(string sessionToken, string code);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/GetError", ReplyAction="http://Dw.WcfService/IDwConnect/GetErrorResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/GetErrorDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    string GetError(string sessionToken);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/GetError", ReplyAction="http://Dw.WcfService/IDwConnect/GetErrorResponse")]
    System.Threading.Tasks.Task<string> GetErrorAsync(string sessionToken);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/Ping", ReplyAction="http://Dw.WcfService/IDwConnect/PingResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/PingDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    bool Ping(string sessionToken);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/Ping", ReplyAction="http://Dw.WcfService/IDwConnect/PingResponse")]
    System.Threading.Tasks.Task<bool> PingAsync(string sessionToken);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/GetDwInfo", ReplyAction="http://Dw.WcfService/IDwConnect/GetDwInfoResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/GetDwInfoDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    Dw.WcfService.DwInfo GetDwInfo(string sessionToken);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/GetDwInfo", ReplyAction="http://Dw.WcfService/IDwConnect/GetDwInfoResponse")]
    System.Threading.Tasks.Task<Dw.WcfService.DwInfo> GetDwInfoAsync(string sessionToken);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/AppDataRequest", ReplyAction="http://Dw.WcfService/IDwConnect/AppDataRequestResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/AppDataRequestDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    Dw.WcfService.AppData AppDataRequest(string sessionToken, Dw.WcfService.AppData appData);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/AppDataRequest", ReplyAction="http://Dw.WcfService/IDwConnect/AppDataRequestResponse")]
    System.Threading.Tasks.Task<Dw.WcfService.AppData> AppDataRequestAsync(string sessionToken, Dw.WcfService.AppData appData);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/GetProjectName", ReplyAction="http://Dw.WcfService/IDwConnect/GetProjectNameResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/GetProjectNameDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    string GetProjectName(string sessionToken, int projectId);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/GetProjectName", ReplyAction="http://Dw.WcfService/IDwConnect/GetProjectNameResponse")]
    System.Threading.Tasks.Task<string> GetProjectNameAsync(string sessionToken, int projectId);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/GetAttributes", ReplyAction="http://Dw.WcfService/IDwConnect/GetAttributesResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/GetAttributesDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    Dw.WcfService.GetAttributesResponse GetAttributes(Dw.WcfService.GetAttributesRequest request);
        
    // CODEGEN: Ein Nachrichtenvertrag wird generiert, da der Vorgang mehrere Rückgabewerte aufweist.
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/GetAttributes", ReplyAction="http://Dw.WcfService/IDwConnect/GetAttributesResponse")]
    System.Threading.Tasks.Task<Dw.WcfService.GetAttributesResponse> GetAttributesAsync(Dw.WcfService.GetAttributesRequest request);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/GetAttributesWithFormula", ReplyAction="http://Dw.WcfService/IDwConnect/GetAttributesWithFormulaResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/GetAttributesWithFormulaDwWcfExceptionDetailsFaul" +
        "t", Name="DwWcfExceptionDetails")]
    Dw.WcfService.GetAttributesWithFormulaResponse GetAttributesWithFormula(Dw.WcfService.GetAttributesWithFormulaRequest request);
        
    // CODEGEN: Ein Nachrichtenvertrag wird generiert, da der Vorgang mehrere Rückgabewerte aufweist.
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/GetAttributesWithFormula", ReplyAction="http://Dw.WcfService/IDwConnect/GetAttributesWithFormulaResponse")]
    System.Threading.Tasks.Task<Dw.WcfService.GetAttributesWithFormulaResponse> GetAttributesWithFormulaAsync(Dw.WcfService.GetAttributesWithFormulaRequest request);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/SetContext", ReplyAction="http://Dw.WcfService/IDwConnect/SetContextResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/SetContextDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    void SetContext(string sessionToken, Dw.WcfService.VariableListItem[] contextList);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/SetContext", ReplyAction="http://Dw.WcfService/IDwConnect/SetContextResponse")]
    System.Threading.Tasks.Task SetContextAsync(string sessionToken, Dw.WcfService.VariableListItem[] contextList);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/GetString", ReplyAction="http://Dw.WcfService/IDwConnect/GetStringResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/GetStringDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    string GetString(string sessionToken, Dw.WcfService.xmlListT listType, string request, string systemInfo);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/GetString", ReplyAction="http://Dw.WcfService/IDwConnect/GetStringResponse")]
    System.Threading.Tasks.Task<string> GetStringAsync(string sessionToken, Dw.WcfService.xmlListT listType, string request, string systemInfo);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/Search", ReplyAction="http://Dw.WcfService/IDwConnect/SearchResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/SearchDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    int[] Search(string sessionToken, Dw.WcfService.searchT searchType, string searchCode, Dw.WcfService.OverrideCondition[] overrideCondition);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/Search", ReplyAction="http://Dw.WcfService/IDwConnect/SearchResponse")]
    System.Threading.Tasks.Task<int[]> SearchAsync(string sessionToken, Dw.WcfService.searchT searchType, string searchCode, Dw.WcfService.OverrideCondition[] overrideCondition);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/GetList", ReplyAction="http://Dw.WcfService/IDwConnect/GetListResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/GetListDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    string GetList(string sessionToken, Dw.WcfService.xmlListT listType, string excelOutputCode, int[] parentIds);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/GetList", ReplyAction="http://Dw.WcfService/IDwConnect/GetListResponse")]
    System.Threading.Tasks.Task<string> GetListAsync(string sessionToken, Dw.WcfService.xmlListT listType, string excelOutputCode, int[] parentIds);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/GetListExt", ReplyAction="http://Dw.WcfService/IDwConnect/GetListExtResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/GetListExtDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    string GetListExt(string sessionToken, Dw.WcfService.xmlListT listType, string excelOutputCode, int[] parentIds, Dw.WcfService.ListCondition[] listCondition);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/GetListExt", ReplyAction="http://Dw.WcfService/IDwConnect/GetListExtResponse")]
    System.Threading.Tasks.Task<string> GetListExtAsync(string sessionToken, Dw.WcfService.xmlListT listType, string excelOutputCode, int[] parentIds, Dw.WcfService.ListCondition[] listCondition);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/SearchGetList", ReplyAction="http://Dw.WcfService/IDwConnect/SearchGetListResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/SearchGetListDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    string SearchGetList(string sessionToken, Dw.WcfService.searchT searchType, string searchCode, Dw.WcfService.OverrideCondition[] overrideCondition, Dw.WcfService.xmlListT listType, string excelOutputCode, Dw.WcfService.ListCondition[] listCondition);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/SearchGetList", ReplyAction="http://Dw.WcfService/IDwConnect/SearchGetListResponse")]
    System.Threading.Tasks.Task<string> SearchGetListAsync(string sessionToken, Dw.WcfService.searchT searchType, string searchCode, Dw.WcfService.OverrideCondition[] overrideCondition, Dw.WcfService.xmlListT listType, string excelOutputCode, Dw.WcfService.ListCondition[] listCondition);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/CreateList", ReplyAction="http://Dw.WcfService/IDwConnect/CreateListResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/CreateListDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    int CreateList(string sessionToken, Dw.WcfService.xmlListT listType, string excelOutputCode, int[] parentIds);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/CreateList", ReplyAction="http://Dw.WcfService/IDwConnect/CreateListResponse")]
    System.Threading.Tasks.Task<int> CreateListAsync(string sessionToken, Dw.WcfService.xmlListT listType, string excelOutputCode, int[] parentIds);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/CreateListExt", ReplyAction="http://Dw.WcfService/IDwConnect/CreateListExtResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/CreateListExtDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    int CreateListExt(string sessionToken, Dw.WcfService.xmlListT listType, string excelOutputCode, int[] parentIds, Dw.WcfService.ListCondition[] listCondition);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/CreateListExt", ReplyAction="http://Dw.WcfService/IDwConnect/CreateListExtResponse")]
    System.Threading.Tasks.Task<int> CreateListExtAsync(string sessionToken, Dw.WcfService.xmlListT listType, string excelOutputCode, int[] parentIds, Dw.WcfService.ListCondition[] listCondition);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/SearchCreateList", ReplyAction="http://Dw.WcfService/IDwConnect/SearchCreateListResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/SearchCreateListDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    int SearchCreateList(string sessionToken, Dw.WcfService.searchT searchType, string searchCode, Dw.WcfService.OverrideCondition[] overrideCondition, Dw.WcfService.xmlListT listType, string excelOutputCode, Dw.WcfService.ListCondition[] listCondition);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/SearchCreateList", ReplyAction="http://Dw.WcfService/IDwConnect/SearchCreateListResponse")]
    System.Threading.Tasks.Task<int> SearchCreateListAsync(string sessionToken, Dw.WcfService.searchT searchType, string searchCode, Dw.WcfService.OverrideCondition[] overrideCondition, Dw.WcfService.xmlListT listType, string excelOutputCode, Dw.WcfService.ListCondition[] listCondition);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/CreateLinkList", ReplyAction="http://Dw.WcfService/IDwConnect/CreateLinkListResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/CreateLinkListDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    int CreateLinkList(string sessionToken, Dw.WcfService.cLinkSyncRequest linkSyncRequest);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/CreateLinkList", ReplyAction="http://Dw.WcfService/IDwConnect/CreateLinkListResponse")]
    System.Threading.Tasks.Task<int> CreateLinkListAsync(string sessionToken, Dw.WcfService.cLinkSyncRequest linkSyncRequest);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/GetChunk", ReplyAction="http://Dw.WcfService/IDwConnect/GetChunkResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/GetChunkDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    Dw.WcfService.GetChunkResponse GetChunk(Dw.WcfService.GetChunkRequest request);
        
    // CODEGEN: Ein Nachrichtenvertrag wird generiert, da der Vorgang mehrere Rückgabewerte aufweist.
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/GetChunk", ReplyAction="http://Dw.WcfService/IDwConnect/GetChunkResponse")]
    System.Threading.Tasks.Task<Dw.WcfService.GetChunkResponse> GetChunkAsync(Dw.WcfService.GetChunkRequest request);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/GetStream", ReplyAction="http://Dw.WcfService/IDwConnect/GetStreamResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/GetStreamDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    System.IO.Stream GetStream(string sessionToken, int handle);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/GetStream", ReplyAction="http://Dw.WcfService/IDwConnect/GetStreamResponse")]
    System.Threading.Tasks.Task<System.IO.Stream> GetStreamAsync(string sessionToken, int handle);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/ReleaseStream", ReplyAction="http://Dw.WcfService/IDwConnect/ReleaseStreamResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/ReleaseStreamDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    void ReleaseStream(string sessionToken, int handle);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/ReleaseStream", ReplyAction="http://Dw.WcfService/IDwConnect/ReleaseStreamResponse")]
    System.Threading.Tasks.Task ReleaseStreamAsync(string sessionToken, int handle);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/SetChunkSize", ReplyAction="http://Dw.WcfService/IDwConnect/SetChunkSizeResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/SetChunkSizeDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    void SetChunkSize(string sessionToken, int bytes);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/SetChunkSize", ReplyAction="http://Dw.WcfService/IDwConnect/SetChunkSizeResponse")]
    System.Threading.Tasks.Task SetChunkSizeAsync(string sessionToken, int bytes);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/OpenFile", ReplyAction="http://Dw.WcfService/IDwConnect/OpenFileResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/OpenFileDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    int OpenFile(string sessionToken, int projectId, string path);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/OpenFile", ReplyAction="http://Dw.WcfService/IDwConnect/OpenFileResponse")]
    System.Threading.Tasks.Task<int> OpenFileAsync(string sessionToken, int projectId, string path);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/OpenFileZipped", ReplyAction="http://Dw.WcfService/IDwConnect/OpenFileZippedResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/OpenFileZippedDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    int OpenFileZipped(string sessionToken, int projectId, string path);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/OpenFileZipped", ReplyAction="http://Dw.WcfService/IDwConnect/OpenFileZippedResponse")]
    System.Threading.Tasks.Task<int> OpenFileZippedAsync(string sessionToken, int projectId, string path);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/testReturnAttrListItem_string", ReplyAction="http://Dw.WcfService/IDwConnect/testReturnAttrListItem_stringResponse")]
    Dw.WcfService.AttrListItem testReturnAttrListItem_string(string v);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/testReturnAttrListItem_string", ReplyAction="http://Dw.WcfService/IDwConnect/testReturnAttrListItem_stringResponse")]
    System.Threading.Tasks.Task<Dw.WcfService.AttrListItem> testReturnAttrListItem_stringAsync(string v);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/testReturnAttrListItem_int", ReplyAction="http://Dw.WcfService/IDwConnect/testReturnAttrListItem_intResponse")]
    Dw.WcfService.AttrListItem testReturnAttrListItem_int(int v);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/testReturnAttrListItem_int", ReplyAction="http://Dw.WcfService/IDwConnect/testReturnAttrListItem_intResponse")]
    System.Threading.Tasks.Task<Dw.WcfService.AttrListItem> testReturnAttrListItem_intAsync(int v);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/testReturnAttrListItem_double", ReplyAction="http://Dw.WcfService/IDwConnect/testReturnAttrListItem_doubleResponse")]
    Dw.WcfService.AttrListItem testReturnAttrListItem_double(double v);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/testReturnAttrListItem_double", ReplyAction="http://Dw.WcfService/IDwConnect/testReturnAttrListItem_doubleResponse")]
    System.Threading.Tasks.Task<Dw.WcfService.AttrListItem> testReturnAttrListItem_doubleAsync(double v);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/testReturnAttrListItem_stringArray", ReplyAction="http://Dw.WcfService/IDwConnect/testReturnAttrListItem_stringArrayResponse")]
    Dw.WcfService.AttrListItem[] testReturnAttrListItem_stringArray(string[] v);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/testReturnAttrListItem_stringArray", ReplyAction="http://Dw.WcfService/IDwConnect/testReturnAttrListItem_stringArrayResponse")]
    System.Threading.Tasks.Task<Dw.WcfService.AttrListItem[]> testReturnAttrListItem_stringArrayAsync(string[] v);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/BeginUploadData", ReplyAction="http://Dw.WcfService/IDwConnect/BeginUploadDataResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/BeginUploadDataDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    int BeginUploadData(string sessionToken, string dataFileName);
        
    [System.ServiceModel.OperationContractAttribute(Action= "http://Dw.WcfService/IDwConnect/BeginUpLogo", ReplyAction= "http://Dw.WcfService/IDwConnect/BeginUpLogoResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action= "http://Dw.WcfService/IDwConnect/BeginUpLogoDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    int BeginUpLogo(string sessionToken, string imageFileName);
        
    [System.ServiceModel.OperationContractAttribute(Action= "http://Dw.WcfService/IDwConnect/BeginUpLink", ReplyAction= "http://Dw.WcfService/IDwConnect/BeginUpLinkResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action= "http://Dw.WcfService/IDwConnect/BeginUpLinkDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    int BeginUpLink(string sessionToken, string linkFileName);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/BeginUploadData", ReplyAction="http://Dw.WcfService/IDwConnect/BeginUploadDataResponse")]
    System.Threading.Tasks.Task<int> BeginUploadDataAsync(string sessionToken, string dataFileName);

[System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/UploadMetaData", ReplyAction="http://Dw.WcfService/IDwConnect/UploadMetaDataResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/UploadMetaDataDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    bool UploadMetaData(string sessionToken, int handle, string name, string description, string[] info, string application, string statusCode);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/UploadMetaData", ReplyAction="http://Dw.WcfService/IDwConnect/UploadMetaDataResponse")]
    System.Threading.Tasks.Task<bool> UploadMetaDataAsync(string sessionToken, int handle, string name, string description, string[] info, string application, string statusCode);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/UploadMetaData2", ReplyAction="http://Dw.WcfService/IDwConnect/UploadMetaData2Response")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/UploadMetaData2DwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    bool UploadMetaData2(string sessionToken, int handle, string name, string description, string[] info, string application, string statusCode, string externStatusCode);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/UploadMetaData2", ReplyAction="http://Dw.WcfService/IDwConnect/UploadMetaData2Response")]
    System.Threading.Tasks.Task<bool> UploadMetaData2Async(string sessionToken, int handle, string name, string description, string[] info, string application, string statusCode, string externStatusCode);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/UploadChunk", ReplyAction="http://Dw.WcfService/IDwConnect/UploadChunkResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/UploadChunkDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    bool UploadChunk(string sessionToken, int handle, byte[] b, int count);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/UploadChunk", ReplyAction="http://Dw.WcfService/IDwConnect/UploadChunkResponse")]
    System.Threading.Tasks.Task<bool> UploadChunkAsync(string sessionToken, int handle, byte[] b, int count);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/EndUploadData", ReplyAction="http://Dw.WcfService/IDwConnect/EndUploadDataResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/EndUploadDataDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    int EndUploadData(string sessionToken, int handle);

[System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://Dw.WcfService/IDwConnect/EndUpLogo")]
//[System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action = "http://Dw.WcfService/IDwConnect/EndUpLogoDwWcfExceptionDetailsFault", Name = "DwWcfExceptionDetails")]
void EndUpLogo(string sessionToken, int handle, int id, int iOt);

[System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://Dw.WcfService/IDwConnect/EndUpLink")]
//[System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action = "http://Dw.WcfService/IDwConnect/EndUpLinkDwWcfExceptionDetailsFault", Name = "DwWcfExceptionDetails")]
void EndUpLink(string sessionToken, int handle, int id, int iOt, string name, string url, string description, string keywords, string info, int flags);

[System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/EndUploadData", ReplyAction="http://Dw.WcfService/IDwConnect/EndUploadDataResponse")]
    System.Threading.Tasks.Task<int> EndUploadDataAsync(string sessionToken, int handle);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/CancelUploadData", ReplyAction="http://Dw.WcfService/IDwConnect/CancelUploadDataResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/CancelUploadDataDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    bool CancelUploadData(string sessionToken, int handle);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/CancelUploadData", ReplyAction="http://Dw.WcfService/IDwConnect/CancelUploadDataResponse")]
    System.Threading.Tasks.Task<bool> CancelUploadDataAsync(string sessionToken, int handle);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/BeginUploadFile", ReplyAction="http://Dw.WcfService/IDwConnect/BeginUploadFileResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/BeginUploadFileDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    int BeginUploadFile(string sessionToken, int dataHandle, string fName, string description);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/BeginUploadFile", ReplyAction="http://Dw.WcfService/IDwConnect/BeginUploadFileResponse")]
    System.Threading.Tasks.Task<int> BeginUploadFileAsync(string sessionToken, int dataHandle, string fName, string description);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/EndUploadFile", ReplyAction="http://Dw.WcfService/IDwConnect/EndUploadFileResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/EndUploadFileDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    bool EndUploadFile(string sessionToken, int handle, string handlingCode);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/EndUploadFile", ReplyAction="http://Dw.WcfService/IDwConnect/EndUploadFileResponse")]
    System.Threading.Tasks.Task<bool> EndUploadFileAsync(string sessionToken, int handle, string handlingCode);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/CancelUploadFile", ReplyAction="http://Dw.WcfService/IDwConnect/CancelUploadFileResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Dw.WcfService.DwWcfExceptionDetails), Action="http://Dw.WcfService/IDwConnect/CancelUploadFileDwWcfExceptionDetailsFault", Name="DwWcfExceptionDetails")]
    bool CancelUploadFile(string sessionToken, int handle);
        
    [System.ServiceModel.OperationContractAttribute(Action="http://Dw.WcfService/IDwConnect/CancelUploadFile", ReplyAction="http://Dw.WcfService/IDwConnect/CancelUploadFileResponse")]
    System.Threading.Tasks.Task<bool> CancelUploadFileAsync(string sessionToken, int handle);
}
    
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.ServiceModel.MessageContractAttribute(WrapperName="Logon", WrapperNamespace="http://Dw.WcfService", IsWrapped=true)]
public partial class LogonRequest
{
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=0)]
    public string userName;
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=1)]
    public string password;
        
    public LogonRequest()
    {
    }
        
    public LogonRequest(string userName, string password)
    {
        this.userName = userName;
        this.password = password;
    }
}
    
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.ServiceModel.MessageContractAttribute(WrapperName="LogonResponse", WrapperNamespace="http://Dw.WcfService", IsWrapped=true)]
public partial class LogonResponse
{
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=0)]
    public bool LogonResult;
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=1)]
    public string sessionToken;
        
    public LogonResponse()
    {
    }
        
    public LogonResponse(bool LogonResult, string sessionToken)
    {
        this.LogonResult = LogonResult;
        this.sessionToken = sessionToken;
    }
}
    
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.ServiceModel.MessageContractAttribute(WrapperName="ConnectDwProject", WrapperNamespace="http://Dw.WcfService", IsWrapped=true)]
public partial class ConnectDwProjectRequest
{
        
    public ConnectDwProjectRequest()
    {
    }
}
    
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.ServiceModel.MessageContractAttribute(WrapperName="ConnectDwProjectResponse", WrapperNamespace="http://Dw.WcfService", IsWrapped=true)]
public partial class ConnectDwProjectResponse
{
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=0)]
    public bool ConnectDwProjectResult;
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=1)]
    public string sessionToken;
        
    public ConnectDwProjectResponse()
    {
    }
        
    public ConnectDwProjectResponse(bool ConnectDwProjectResult, string sessionToken)
    {
        this.ConnectDwProjectResult = ConnectDwProjectResult;
        this.sessionToken = sessionToken;
    }
}
    
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetAttributes", WrapperNamespace="http://Dw.WcfService", IsWrapped=true)]
public partial class GetAttributesRequest
{
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=0)]
    public string sessionToken;
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=1)]
    public Dw.WcfService.AttrListItem[] attrList;
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=2)]
    public Dw.WcfService.VariableListItem[] variableList;
        
    public GetAttributesRequest()
    {
    }
        
    public GetAttributesRequest(string sessionToken, Dw.WcfService.AttrListItem[] attrList, Dw.WcfService.VariableListItem[] variableList)
    {
        this.sessionToken = sessionToken;
        this.attrList = attrList;
        this.variableList = variableList;
    }
}
    
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetAttributesResponse", WrapperNamespace="http://Dw.WcfService", IsWrapped=true)]
public partial class GetAttributesResponse
{
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=0)]
    public bool GetAttributesResult;
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=1)]
    public Dw.WcfService.AttrListItem[] attrList;
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=2)]
    public Dw.WcfService.VariableListItem[] variableList;
        
    public GetAttributesResponse()
    {
    }
        
    public GetAttributesResponse(bool GetAttributesResult, Dw.WcfService.AttrListItem[] attrList, Dw.WcfService.VariableListItem[] variableList)
    {
        this.GetAttributesResult = GetAttributesResult;
        this.attrList = attrList;
        this.variableList = variableList;
    }
}
    
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetAttributesWithFormula", WrapperNamespace="http://Dw.WcfService", IsWrapped=true)]
public partial class GetAttributesWithFormulaRequest
{
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=0)]
    public string sessionToken;
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=1)]
    public Dw.WcfService.AttrListItem[] attrList;
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=2)]
    public Dw.WcfService.FormulaListItem[] formulaList;
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=3)]
    public Dw.WcfService.VariableListItem[] variableList;
        
    public GetAttributesWithFormulaRequest()
    {
    }
        
    public GetAttributesWithFormulaRequest(string sessionToken, Dw.WcfService.AttrListItem[] attrList, Dw.WcfService.FormulaListItem[] formulaList, Dw.WcfService.VariableListItem[] variableList)
    {
        this.sessionToken = sessionToken;
        this.attrList = attrList;
        this.formulaList = formulaList;
        this.variableList = variableList;
    }
}
    
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetAttributesWithFormulaResponse", WrapperNamespace="http://Dw.WcfService", IsWrapped=true)]
public partial class GetAttributesWithFormulaResponse
{
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=0)]
    public bool GetAttributesWithFormulaResult;
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=1)]
    public Dw.WcfService.AttrListItem[] attrList;
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=2)]
    public Dw.WcfService.FormulaListItem[] formulaList;
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=3)]
    public Dw.WcfService.VariableListItem[] variableList;
        
    public GetAttributesWithFormulaResponse()
    {
    }
        
    public GetAttributesWithFormulaResponse(bool GetAttributesWithFormulaResult, Dw.WcfService.AttrListItem[] attrList, Dw.WcfService.FormulaListItem[] formulaList, Dw.WcfService.VariableListItem[] variableList)
    {
        this.GetAttributesWithFormulaResult = GetAttributesWithFormulaResult;
        this.attrList = attrList;
        this.formulaList = formulaList;
        this.variableList = variableList;
    }
}
    
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetChunk", WrapperNamespace="http://Dw.WcfService", IsWrapped=true)]
public partial class GetChunkRequest
{
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=0)]
    public string sessionToken;
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=1)]
    public int handle;
        
    public GetChunkRequest()
    {
    }
        
    public GetChunkRequest(string sessionToken, int handle)
    {
        this.sessionToken = sessionToken;
        this.handle = handle;
    }
}
    
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
[System.ServiceModel.MessageContractAttribute(WrapperName="GetChunkResponse", WrapperNamespace="http://Dw.WcfService", IsWrapped=true)]
public partial class GetChunkResponse
{
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=0)]
    public int GetChunkResult;
        
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Dw.WcfService", Order=1)]
    public byte[] b;
        
    public GetChunkResponse()
    {
    }
        
    public GetChunkResponse(int GetChunkResult, byte[] b)
    {
        this.GetChunkResult = GetChunkResult;
        this.b = b;
    }
}
    
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
public interface IDwConnectChannel : Dw.WcfService.IDwConnect, System.ServiceModel.IClientChannel
{
}
    
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
public partial class DwConnectClient : System.ServiceModel.ClientBase<Dw.WcfService.IDwConnect>, Dw.WcfService.IDwConnect
{
        
    /// <summary>
    /// Implementieren Sie diese partielle Methode, um den Dienstendpunkt zu konfigurieren.
    /// </summary>
    /// <param name="serviceEndpoint">Der zu konfigurierende Endpunkt</param>
    /// <param name="clientCredentials">Die Clientanmeldeinformationen</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
    public DwConnectClient() : 
            base(DwConnectClient.GetDefaultBinding(), DwConnectClient.GetDefaultEndpointAddress())
    {
        this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IDwConnect.ToString();
        ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
    }
        
    public DwConnectClient(EndpointConfiguration endpointConfiguration) : 
            base(DwConnectClient.GetBindingForEndpoint(endpointConfiguration), DwConnectClient.GetEndpointAddress(endpointConfiguration))
    {
        this.Endpoint.Name = endpointConfiguration.ToString();
        ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
    }
        
    public DwConnectClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
            base(DwConnectClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
    {
        this.Endpoint.Name = endpointConfiguration.ToString();
        ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
    }
        
    public DwConnectClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(DwConnectClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
    {
        this.Endpoint.Name = endpointConfiguration.ToString();
        ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
    }
        
    public DwConnectClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
        
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Dw.WcfService.LogonResponse Dw.WcfService.IDwConnect.Logon(Dw.WcfService.LogonRequest request)
    {
        return base.Channel.Logon(request);
    }
        
    public bool Logon(string userName, string password, out string sessionToken)
    {
        Dw.WcfService.LogonRequest inValue = new Dw.WcfService.LogonRequest();
        inValue.userName = userName;
        inValue.password = password;
        Dw.WcfService.LogonResponse retVal = ((Dw.WcfService.IDwConnect)(this)).Logon(inValue);
        sessionToken = retVal.sessionToken;
        return retVal.LogonResult;
    }
        
    public System.Threading.Tasks.Task<Dw.WcfService.LogonResponse> LogonAsync(Dw.WcfService.LogonRequest request)
    {
        return base.Channel.LogonAsync(request);
    }
        
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Dw.WcfService.ConnectDwProjectResponse Dw.WcfService.IDwConnect.ConnectDwProject(Dw.WcfService.ConnectDwProjectRequest request)
    {
        return base.Channel.ConnectDwProject(request);
    }
        
    public bool ConnectDwProject(out string sessionToken)
    {
        Dw.WcfService.ConnectDwProjectRequest inValue = new Dw.WcfService.ConnectDwProjectRequest();
        Dw.WcfService.ConnectDwProjectResponse retVal = ((Dw.WcfService.IDwConnect)(this)).ConnectDwProject(inValue);
        sessionToken = retVal.sessionToken;
        return retVal.ConnectDwProjectResult;
    }
        
    public System.Threading.Tasks.Task<Dw.WcfService.ConnectDwProjectResponse> ConnectDwProjectAsync(Dw.WcfService.ConnectDwProjectRequest request)
    {
        return base.Channel.ConnectDwProjectAsync(request);
    }
        
    public void Logoff(string sessionToken)
    {
        base.Channel.Logoff(sessionToken);
    }
        
    public System.Threading.Tasks.Task LogoffAsync(string sessionToken)
    {
        return base.Channel.LogoffAsync(sessionToken);
    }
        
    public void SetDataLanguage(string sessionToken, string code)
    {
        base.Channel.SetDataLanguage(sessionToken, code);
    }
        
    public System.Threading.Tasks.Task SetDataLanguageAsync(string sessionToken, string code)
    {
        return base.Channel.SetDataLanguageAsync(sessionToken, code);
    }
        
    public string GetError(string sessionToken)
    {
        return base.Channel.GetError(sessionToken);
    }
        
    public System.Threading.Tasks.Task<string> GetErrorAsync(string sessionToken)
    {
        return base.Channel.GetErrorAsync(sessionToken);
    }
        
    public bool Ping(string sessionToken)
    {
        return base.Channel.Ping(sessionToken);
    }
        
    public System.Threading.Tasks.Task<bool> PingAsync(string sessionToken)
    {
        return base.Channel.PingAsync(sessionToken);
    }
        
    public Dw.WcfService.DwInfo GetDwInfo(string sessionToken)
    {
        return base.Channel.GetDwInfo(sessionToken);
    }
        
    public System.Threading.Tasks.Task<Dw.WcfService.DwInfo> GetDwInfoAsync(string sessionToken)
    {
        return base.Channel.GetDwInfoAsync(sessionToken);
    }
        
    public Dw.WcfService.AppData AppDataRequest(string sessionToken, Dw.WcfService.AppData appData)
    {
        return base.Channel.AppDataRequest(sessionToken, appData);
    }
        
    public System.Threading.Tasks.Task<Dw.WcfService.AppData> AppDataRequestAsync(string sessionToken, Dw.WcfService.AppData appData)
    {
        return base.Channel.AppDataRequestAsync(sessionToken, appData);
    }
        
    public string GetProjectName(string sessionToken, int projectId)
    {
        return base.Channel.GetProjectName(sessionToken, projectId);
    }
        
    public System.Threading.Tasks.Task<string> GetProjectNameAsync(string sessionToken, int projectId)
    {
        return base.Channel.GetProjectNameAsync(sessionToken, projectId);
    }
        
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Dw.WcfService.GetAttributesResponse Dw.WcfService.IDwConnect.GetAttributes(Dw.WcfService.GetAttributesRequest request)
    {
        return base.Channel.GetAttributes(request);
    }
        
    public bool GetAttributes(string sessionToken, ref Dw.WcfService.AttrListItem[] attrList, ref Dw.WcfService.VariableListItem[] variableList)
    {
        Dw.WcfService.GetAttributesRequest inValue = new Dw.WcfService.GetAttributesRequest();
        inValue.sessionToken = sessionToken;
        inValue.attrList = attrList;
        inValue.variableList = variableList;
        Dw.WcfService.GetAttributesResponse retVal = ((Dw.WcfService.IDwConnect)(this)).GetAttributes(inValue);
        attrList = retVal.attrList;
        variableList = retVal.variableList;
        return retVal.GetAttributesResult;
    }
        
    public System.Threading.Tasks.Task<Dw.WcfService.GetAttributesResponse> GetAttributesAsync(Dw.WcfService.GetAttributesRequest request)
    {
        return base.Channel.GetAttributesAsync(request);
    }
        
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Dw.WcfService.GetAttributesWithFormulaResponse Dw.WcfService.IDwConnect.GetAttributesWithFormula(Dw.WcfService.GetAttributesWithFormulaRequest request)
    {
        return base.Channel.GetAttributesWithFormula(request);
    }
        
    public bool GetAttributesWithFormula(string sessionToken, ref Dw.WcfService.AttrListItem[] attrList, ref Dw.WcfService.FormulaListItem[] formulaList, ref Dw.WcfService.VariableListItem[] variableList)
    {
        Dw.WcfService.GetAttributesWithFormulaRequest inValue = new Dw.WcfService.GetAttributesWithFormulaRequest();
        inValue.sessionToken = sessionToken;
        inValue.attrList = attrList;
        inValue.formulaList = formulaList;
        inValue.variableList = variableList;
        Dw.WcfService.GetAttributesWithFormulaResponse retVal = ((Dw.WcfService.IDwConnect)(this)).GetAttributesWithFormula(inValue);
        attrList = retVal.attrList;
        formulaList = retVal.formulaList;
        variableList = retVal.variableList;
        return retVal.GetAttributesWithFormulaResult;
    }
        
    public System.Threading.Tasks.Task<Dw.WcfService.GetAttributesWithFormulaResponse> GetAttributesWithFormulaAsync(Dw.WcfService.GetAttributesWithFormulaRequest request)
    {
        return base.Channel.GetAttributesWithFormulaAsync(request);
    }
        
    public void SetContext(string sessionToken, Dw.WcfService.VariableListItem[] contextList)
    {
        base.Channel.SetContext(sessionToken, contextList);
    }
        
    public System.Threading.Tasks.Task SetContextAsync(string sessionToken, Dw.WcfService.VariableListItem[] contextList)
    {
        return base.Channel.SetContextAsync(sessionToken, contextList);
    }
        
    public string GetString(string sessionToken, Dw.WcfService.xmlListT listType, string request, string systemInfo)
    {
        return base.Channel.GetString(sessionToken, listType, request, systemInfo);
    }
        
    public System.Threading.Tasks.Task<string> GetStringAsync(string sessionToken, Dw.WcfService.xmlListT listType, string request, string systemInfo)
    {
        return base.Channel.GetStringAsync(sessionToken, listType, request, systemInfo);
    }
        
    public int[] Search(string sessionToken, Dw.WcfService.searchT searchType, string searchCode, Dw.WcfService.OverrideCondition[] overrideCondition)
    {
        return base.Channel.Search(sessionToken, searchType, searchCode, overrideCondition);
    }
        
    public System.Threading.Tasks.Task<int[]> SearchAsync(string sessionToken, Dw.WcfService.searchT searchType, string searchCode, Dw.WcfService.OverrideCondition[] overrideCondition)
    {
        return base.Channel.SearchAsync(sessionToken, searchType, searchCode, overrideCondition);
    }
        
    public string GetList(string sessionToken, Dw.WcfService.xmlListT listType, string excelOutputCode, int[] parentIds)
    {
        return base.Channel.GetList(sessionToken, listType, excelOutputCode, parentIds);
    }
        
    public System.Threading.Tasks.Task<string> GetListAsync(string sessionToken, Dw.WcfService.xmlListT listType, string excelOutputCode, int[] parentIds)
    {
        return base.Channel.GetListAsync(sessionToken, listType, excelOutputCode, parentIds);
    }
        
    public string GetListExt(string sessionToken, Dw.WcfService.xmlListT listType, string excelOutputCode, int[] parentIds, Dw.WcfService.ListCondition[] listCondition)
    {
        return base.Channel.GetListExt(sessionToken, listType, excelOutputCode, parentIds, listCondition);
    }
        
    public System.Threading.Tasks.Task<string> GetListExtAsync(string sessionToken, Dw.WcfService.xmlListT listType, string excelOutputCode, int[] parentIds, Dw.WcfService.ListCondition[] listCondition)
    {
        return base.Channel.GetListExtAsync(sessionToken, listType, excelOutputCode, parentIds, listCondition);
    }
        
    public string SearchGetList(string sessionToken, Dw.WcfService.searchT searchType, string searchCode, Dw.WcfService.OverrideCondition[] overrideCondition, Dw.WcfService.xmlListT listType, string excelOutputCode, Dw.WcfService.ListCondition[] listCondition)
    {
        return base.Channel.SearchGetList(sessionToken, searchType, searchCode, overrideCondition, listType, excelOutputCode, listCondition);
    }
        
    public System.Threading.Tasks.Task<string> SearchGetListAsync(string sessionToken, Dw.WcfService.searchT searchType, string searchCode, Dw.WcfService.OverrideCondition[] overrideCondition, Dw.WcfService.xmlListT listType, string excelOutputCode, Dw.WcfService.ListCondition[] listCondition)
    {
        return base.Channel.SearchGetListAsync(sessionToken, searchType, searchCode, overrideCondition, listType, excelOutputCode, listCondition);
    }
        
    public int CreateList(string sessionToken, Dw.WcfService.xmlListT listType, string excelOutputCode, int[] parentIds)
    {
        return base.Channel.CreateList(sessionToken, listType, excelOutputCode, parentIds);
    }
        
    public System.Threading.Tasks.Task<int> CreateListAsync(string sessionToken, Dw.WcfService.xmlListT listType, string excelOutputCode, int[] parentIds)
    {
        return base.Channel.CreateListAsync(sessionToken, listType, excelOutputCode, parentIds);
    }
        
    public int CreateListExt(string sessionToken, Dw.WcfService.xmlListT listType, string excelOutputCode, int[] parentIds, Dw.WcfService.ListCondition[] listCondition)
    {
        return base.Channel.CreateListExt(sessionToken, listType, excelOutputCode, parentIds, listCondition);
    }
        
    public System.Threading.Tasks.Task<int> CreateListExtAsync(string sessionToken, Dw.WcfService.xmlListT listType, string excelOutputCode, int[] parentIds, Dw.WcfService.ListCondition[] listCondition)
    {
        return base.Channel.CreateListExtAsync(sessionToken, listType, excelOutputCode, parentIds, listCondition);
    }
        
    public int SearchCreateList(string sessionToken, Dw.WcfService.searchT searchType, string searchCode, Dw.WcfService.OverrideCondition[] overrideCondition, Dw.WcfService.xmlListT listType, string excelOutputCode, Dw.WcfService.ListCondition[] listCondition)
    {
        return base.Channel.SearchCreateList(sessionToken, searchType, searchCode, overrideCondition, listType, excelOutputCode, listCondition);
    }
        
    public System.Threading.Tasks.Task<int> SearchCreateListAsync(string sessionToken, Dw.WcfService.searchT searchType, string searchCode, Dw.WcfService.OverrideCondition[] overrideCondition, Dw.WcfService.xmlListT listType, string excelOutputCode, Dw.WcfService.ListCondition[] listCondition)
    {
        return base.Channel.SearchCreateListAsync(sessionToken, searchType, searchCode, overrideCondition, listType, excelOutputCode, listCondition);
    }
        
    public int CreateLinkList(string sessionToken, Dw.WcfService.cLinkSyncRequest linkSyncRequest)
    {
        return base.Channel.CreateLinkList(sessionToken, linkSyncRequest);
    }
        
    public System.Threading.Tasks.Task<int> CreateLinkListAsync(string sessionToken, Dw.WcfService.cLinkSyncRequest linkSyncRequest)
    {
        return base.Channel.CreateLinkListAsync(sessionToken, linkSyncRequest);
    }
        
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    Dw.WcfService.GetChunkResponse Dw.WcfService.IDwConnect.GetChunk(Dw.WcfService.GetChunkRequest request)
    {
        return base.Channel.GetChunk(request);
    }
        
    public int GetChunk(string sessionToken, int handle, out byte[] b)
    {
        Dw.WcfService.GetChunkRequest inValue = new Dw.WcfService.GetChunkRequest();
        inValue.sessionToken = sessionToken;
        inValue.handle = handle;
        Dw.WcfService.GetChunkResponse retVal = ((Dw.WcfService.IDwConnect)(this)).GetChunk(inValue);
        b = retVal.b;
        return retVal.GetChunkResult;
    }
        
    public System.Threading.Tasks.Task<Dw.WcfService.GetChunkResponse> GetChunkAsync(Dw.WcfService.GetChunkRequest request)
    {
        return base.Channel.GetChunkAsync(request);
    }
        
    public System.IO.Stream GetStream(string sessionToken, int handle)
    {
        return base.Channel.GetStream(sessionToken, handle);
    }
        
    public System.Threading.Tasks.Task<System.IO.Stream> GetStreamAsync(string sessionToken, int handle)
    {
        return base.Channel.GetStreamAsync(sessionToken, handle);
    }
        
    public void ReleaseStream(string sessionToken, int handle)
    {
        base.Channel.ReleaseStream(sessionToken, handle);
    }
        
    public System.Threading.Tasks.Task ReleaseStreamAsync(string sessionToken, int handle)
    {
        return base.Channel.ReleaseStreamAsync(sessionToken, handle);
    }
        
    public void SetChunkSize(string sessionToken, int bytes)
    {
        base.Channel.SetChunkSize(sessionToken, bytes);
    }
        
    public System.Threading.Tasks.Task SetChunkSizeAsync(string sessionToken, int bytes)
    {
        return base.Channel.SetChunkSizeAsync(sessionToken, bytes);
    }
        
    public int OpenFile(string sessionToken, int projectId, string path)
    {
        return base.Channel.OpenFile(sessionToken, projectId, path);
    }
        
    public System.Threading.Tasks.Task<int> OpenFileAsync(string sessionToken, int projectId, string path)
    {
        return base.Channel.OpenFileAsync(sessionToken, projectId, path);
    }
        
    public int OpenFileZipped(string sessionToken, int projectId, string path)
    {
        return base.Channel.OpenFileZipped(sessionToken, projectId, path);
    }
        
    public System.Threading.Tasks.Task<int> OpenFileZippedAsync(string sessionToken, int projectId, string path)
    {
        return base.Channel.OpenFileZippedAsync(sessionToken, projectId, path);
    }
        
    public Dw.WcfService.AttrListItem testReturnAttrListItem_string(string v)
    {
        return base.Channel.testReturnAttrListItem_string(v);
    }
        
    public System.Threading.Tasks.Task<Dw.WcfService.AttrListItem> testReturnAttrListItem_stringAsync(string v)
    {
        return base.Channel.testReturnAttrListItem_stringAsync(v);
    }
        
    public Dw.WcfService.AttrListItem testReturnAttrListItem_int(int v)
    {
        return base.Channel.testReturnAttrListItem_int(v);
    }
        
    public System.Threading.Tasks.Task<Dw.WcfService.AttrListItem> testReturnAttrListItem_intAsync(int v)
    {
        return base.Channel.testReturnAttrListItem_intAsync(v);
    }
        
    public Dw.WcfService.AttrListItem testReturnAttrListItem_double(double v)
    {
        return base.Channel.testReturnAttrListItem_double(v);
    }
        
    public System.Threading.Tasks.Task<Dw.WcfService.AttrListItem> testReturnAttrListItem_doubleAsync(double v)
    {
        return base.Channel.testReturnAttrListItem_doubleAsync(v);
    }
        
    public Dw.WcfService.AttrListItem[] testReturnAttrListItem_stringArray(string[] v)
    {
        return base.Channel.testReturnAttrListItem_stringArray(v);
    }
        
    public System.Threading.Tasks.Task<Dw.WcfService.AttrListItem[]> testReturnAttrListItem_stringArrayAsync(string[] v)
    {
        return base.Channel.testReturnAttrListItem_stringArrayAsync(v);
    }
        
    public int BeginUploadData(string sessionToken, string dataFileName)
    {
        return base.Channel.BeginUploadData(sessionToken, dataFileName);
    }
        
    public int BeginUpLogo(string sessionToken, string imageFileName)
    {
        return base.Channel.BeginUpLogo(sessionToken, imageFileName);
    }
       
    public int BeginUpLink(string sessionToken, string linkFileName)
    {
        return base.Channel.BeginUpLink(sessionToken, linkFileName);
    }
        
    public System.Threading.Tasks.Task<int> BeginUploadDataAsync(string sessionToken, string dataFileName)
    {
        return base.Channel.BeginUploadDataAsync(sessionToken, dataFileName);
    }
        
    public bool UploadMetaData(string sessionToken, int handle, string name, string description, string[] info, string application, string statusCode)
    {
        return base.Channel.UploadMetaData(sessionToken, handle, name, description, info, application, statusCode);
    }
        
    public System.Threading.Tasks.Task<bool> UploadMetaDataAsync(string sessionToken, int handle, string name, string description, string[] info, string application, string statusCode)
    {
        return base.Channel.UploadMetaDataAsync(sessionToken, handle, name, description, info, application, statusCode);
    }
        
    public bool UploadMetaData2(string sessionToken, int handle, string name, string description, string[] info, string application, string statusCode, string externStatusCode)
    {
        return base.Channel.UploadMetaData2(sessionToken, handle, name, description, info, application, statusCode, externStatusCode);
    }
        
    public System.Threading.Tasks.Task<bool> UploadMetaData2Async(string sessionToken, int handle, string name, string description, string[] info, string application, string statusCode, string externStatusCode)
    {
        return base.Channel.UploadMetaData2Async(sessionToken, handle, name, description, info, application, statusCode, externStatusCode);
    }
        
    public bool UploadChunk(string sessionToken, int handle, byte[] b, int count)
    {
        return base.Channel.UploadChunk(sessionToken, handle, b, count);
    }
        
    public System.Threading.Tasks.Task<bool> UploadChunkAsync(string sessionToken, int handle, byte[] b, int count)
    {
        return base.Channel.UploadChunkAsync(sessionToken, handle, b, count);
    }
        
    public int EndUploadData(string sessionToken, int handle)
    {
        return base.Channel.EndUploadData(sessionToken, handle);
    }
       
    public void EndUpLogo(string sessionToken, int handle, int id, int iOt)
    {
        base.Channel.EndUpLogo(sessionToken, handle, id, iOt);
    }
       
    public void EndUpLink(string sessionToken, int handle, int id, int iOt, string name, string url, string description, string keywords, string info, int flags) {
	base.Channel.EndUpLink(sessionToken, handle, id, iOt, name, url, description, keywords, info, flags);
    }
        
    public System.Threading.Tasks.Task<int> EndUploadDataAsync(string sessionToken, int handle)
    {
        return base.Channel.EndUploadDataAsync(sessionToken, handle);
    }
        
    public bool CancelUploadData(string sessionToken, int handle)
    {
        return base.Channel.CancelUploadData(sessionToken, handle);
    }
        
    public System.Threading.Tasks.Task<bool> CancelUploadDataAsync(string sessionToken, int handle)
    {
        return base.Channel.CancelUploadDataAsync(sessionToken, handle);
    }
        
    public int BeginUploadFile(string sessionToken, int dataHandle, string fName, string description)
    {
        return base.Channel.BeginUploadFile(sessionToken, dataHandle, fName, description);
    }
        
    public System.Threading.Tasks.Task<int> BeginUploadFileAsync(string sessionToken, int dataHandle, string fName, string description)
    {
        return base.Channel.BeginUploadFileAsync(sessionToken, dataHandle, fName, description);
    }
        
    public bool EndUploadFile(string sessionToken, int handle, string handlingCode)
    {
        return base.Channel.EndUploadFile(sessionToken, handle, handlingCode);
    }
        
    public System.Threading.Tasks.Task<bool> EndUploadFileAsync(string sessionToken, int handle, string handlingCode)
    {
        return base.Channel.EndUploadFileAsync(sessionToken, handle, handlingCode);
    }
        
    public bool CancelUploadFile(string sessionToken, int handle)
    {
        return base.Channel.CancelUploadFile(sessionToken, handle);
    }
        
    public System.Threading.Tasks.Task<bool> CancelUploadFileAsync(string sessionToken, int handle)
    {
        return base.Channel.CancelUploadFileAsync(sessionToken, handle);
    }
        
    public virtual System.Threading.Tasks.Task OpenAsync()
    {
        return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
    }
        
    public virtual System.Threading.Tasks.Task CloseAsync()
    {
        return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
    }
        
    private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
    {
        if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IDwConnect))
        {
            System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
            result.MaxBufferSize = int.MaxValue;
            result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
            result.MaxReceivedMessageSize = int.MaxValue;
            result.AllowCookies = true;
            return result;
        }
        throw new System.InvalidOperationException(string.Format("Es wurde kein Endpunkt mit dem Namen \"{0}\" gefunden.", endpointConfiguration));
    }
        
    private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
    {
        if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IDwConnect))
        {
            return new System.ServiceModel.EndpointAddress("http://localhost:52424/Dw.WcfService.svc");
        }
        throw new System.InvalidOperationException(string.Format("Es wurde kein Endpunkt mit dem Namen \"{0}\" gefunden.", endpointConfiguration));
    }
        
    private static System.ServiceModel.Channels.Binding GetDefaultBinding()
    {
        return DwConnectClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IDwConnect);
    }
        
    private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
    {
        return DwConnectClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IDwConnect);
    }
        
    public enum EndpointConfiguration
    {
            
        BasicHttpBinding_IDwConnect,
    }
}
